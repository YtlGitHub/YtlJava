---JAVA格式---
public class HelloWorld {
	public static void main(String[] args){
		System.out.println("HelloWorld");
	}
}
IDEA安装地址：https://www.jetbrains.com/idea/
IDEA项目结构：
	1 创建一个空项目(javaSE_Code)
	2 创建一个新模块(ide_test)
	3 在idea_test模块下的src下创建一个包(com.itheima)
	4 在com.itheima包下新建一个类(HelloWorld)
	5 在HelloWorld类中编写代码
	6 在idea中执行程序
IDEA中内容辅助键和快捷键
	1 快速生成语句
		psvm：快速生成main(方法)
		sout：快速生成输出语句
	2 内容辅助快捷键
		Ctrl+Alt+space: 内容提示，代码补全
	3 快捷键
		注释：
			Ctrl+/: 选中代码单行注释
			Ctrl+Shift+/：选中多行代码注释
IDEA中模块操作分类
	1 新建模块
		"File"~"Project Structure"~"Modules"~"+"~"New Module"~"java"~"JDK自己选"~"Next"~"修改模块名"~"Finish"~"OK"
	2 删除模块
		"选中要删除的模块右键"~"Remove Module"~"Remove" 注意这里只是移除，模块文件是还在的，要想彻底清除，就要找到路径下删除。
	3 快捷打开模块目录路径
		"随便选中一个模块右键"~"Open in"~"Explorer"
	4 导入模块
		"File"~"Project Structure"~"Modules"~"+"~"Import Module"~"选择你要导入的模块"~"OK"~"Next"~"Next"~"Next"~"Finish"~"OK"

一.注释
	1.单行注释：//注释信息
	2.多行注释：/*注释信息*/
	3.文档注释：/**注释信息*/
二.关键字
	1.关键字的字母全部小写
	2.常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观
三.常量
	常量定义：在程序运行过程中，其值不可以发生改变的量
	常量分类：
		1.字符串常量 说明(用双引号括起来的内容) 举例("HelloWorld","黑马程序员")
		2.整数常量   说明(不带小数的数字)       举例(666,-88)
		3.小数常量   说明(带小数的数字)         举例(13.14,-5.21)
		4.字符常量   说明(用单引号括起来的内容) 举例('A','0','我')
		5.布尔常量   说明(布尔值，表示真假)     举例(只有两个值：true,false)
		6.空常量     说明(一个特殊的值，空值)   举例(值是：null)
四.数据类型
	1.计算机存储单元，计算机存储设备的最小信息单元叫"位(bit)"，称之为"比特位"，通常用小写字母"b"表示
					计算机中最小的存储存储单元叫"字节(byte)",用大写字母"B"表示，字节是由连续的8个位组成
		除了字节外还有一些常用的存储单位
		1B(字节) = 8bit
		1KB = 1024B
		1MB = 1024KB
		1GB = 1024MB
		1TB = 1024GB
	2.数据类型内存占用和取值范围
		(1)整数4个关键字分别为
			byte    内存(1) 取值范围(-128~127)
			short   内存(2) 取值范围(-32768~32767)
			int     内存(4) 取值范围(-2的31次方到2的31次方-1)
			long    内存(8) 取值范围(-2的63次方到2的63次方-1)
		(2)浮点数2个关键字
			float   内存(4) 取值范围(负数：-3.402823E+38到-1.401298E-45 正数：1.101298E-45到3.402828E+38)
			double  内存(8) 取值范围(负数：-1.797693E+308到-4.9000000E-324 正数：4.9000000E-324到1.797693E+308)
		(3)字符1个关键字
			char    内存(2) 取值范围(0-65535)
		(4)布尔1个关键字
			boolean 内存(1) 取值范围(true,false)
		(说明：E+38表示是乘以10的38次方，同样，E-45表示乘以10的负45次方)
		(细节：如果给一个整数默认的是int类型的，给一个浮点数默认的是double类型的)
五.变量
	变量定义：
		格式：数据类型变量名 = 变量值;
		范例：int a = 10;
	变量的使用：
		取值格式：变量名
		范例：a
		修改值格式：变量名 = 变量值;
		范例：a = 20;
	注意事项：
		(1)变量名不能重复
			范例：
				int a = 10;
				int a = 20;
		(2)变量未赋值，不能使用
			范例：
				int a;
		(3)long类型的变量定义时，为了防止整数过大，后面需要L/l
			范例：
				long b = 10000000000l;
				System.out.println(b);
		(4)float类型的变量定义的时候，为了防止类型不兼容，后面需要加F/f
			范例：
				float c = 13.14F;
				System.out.println(c);
六.标识符
	标识符概述：就是给类，方法，变量等起名的符号
	1.标识符定义规则
		(1)由数字、字母、下划线(_)、和美元符($)组成
		(2)不能以数字开头
		(3)不能是关键字
		(4)区分大小写
		判断：
			bj(符合)	b2(符合)	2b(不符合)
			class(不符合) _2b(符合)   #itheima(不符合)
			ak47(符合)  Class(符合) helloworld(符合)
			aaaaaa(符合但不规范不利于名字区分)
			aaaaaaa(符合但不规范不利于名字区分)
	2.常见命名约定
		(1)小驼峰命名法：方法、变量
			* 约定1：标识符是一个单词的时候，首字母小写
			* 范例1：name
			* 约定2：标识符由多个字母单词组成的时候，第一个单词首字母小写，其他单词首字母大写
			* 范例1：firstName 
		(2)大驼峰命名法：类
			* 约定1：标识符是一个单词的时候，首字大母
			* 范例1：Student
			* 约定2：标识符由多个字母单词组成的时候，每个单词的首字母大写
			* 范例2：GoodStudent
七.类型转换
	1.自动类型转换：把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量
		范例1：double d = 10;
		数据范围从小到大：
			byte < short < int < long < float < double
					char < int < long < float < double
	2.强制类型转换：把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量
		* 格式：目标数据类型 变量名 = (目标数据类型)值或者变量
		* 范例1：int k = (int)88.88;
八.算术运算符
	1.运算符和表达式
		* 运算符：对常量或者变量进行操作的符号
		* 表达式：用运算符把常量或者变量连接起来符号java语法的式子就可以称为表达式
				  不同运算符连接起来的表达式体现的是不同类型的表达式
		* 举例说明：
					int a = 10;
					int b = 20;
					int c = a + b;
					+；是运算符，并且是算术运算符
					a+b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式
	2.算术运算符
		符号	作用	说明
		+       加		
		-		减
		*		乘
		/		除
		%		取余	获取两个数据做除法的余数
		注意事项：
			/和%的区别：两个数据做除法，/取结果的商，%取结果的余数
			整数操作只能的到整数，要想得到小数，必须有浮点数参与运算
	3.字符+的操作
		拿字符在计算机底层对应的数值来进行计算的
			'A' == 65  A-Z是连续的
			'a' == 97  a-z是连续的
			'0' == 48  0-9是连续的
		算术表达式中包含多个基本数据类型的值的时候。整个算术表达式的类型会自动进行提升
		提升规则：
			* byte类型，short类型和char类型将被提升到int类型
			* 整个表达式的类型自动提升到表达式中最高等级操作同样的类型
				等级顺序：byte,short,char -> int -> long -> float -> double
		
		
		
		
		
		
		
		
		
		
		
		